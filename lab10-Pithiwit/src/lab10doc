
    void testAdd() throws Exception {
        assertEquals(10, Calculator.evaluateExpression("1+9"));
    } มีไว้เพื่อ test การบวก

    void testmultifunc() throws Exception {
        assertEquals(30, Calculator.evaluateExpression("8+7*2"));
        assertEquals(-7, Calculator.evaluateExpression("8-7*2-9"));
    }มีไว้ test สมการหลายตัว//

    void testDivide() throws Exception {
        assertEquals(2, Calculator.evaluateExpression("4/2"));
        assertEquals(2, Calculator.evaluateExpression("7/3")); // Integer division truncates

        Exception exception = assertThrows(ArithmeticException.class, () -> {
            Calculator.evaluateExpression("9/0");
        });
        assertEquals("Division by zero", exception.getMessage());
    }test การหาร

    void testModulo() throws Exception {
        assertEquals(1, Calculator.evaluateExpression("7%3"));

        Exception exception = assertThrows(ArithmeticException.class, () -> {
            Calculator.evaluateExpression("9%0");
        });
        assertEquals("/ by zero", exception.getMessage());
    }test การหารเก็บเศษ


    void testminus() throws Exception {
        assertEquals(1, Calculator.evaluateExpression("2-1"));
    }test การลบ


    void testmulti() throws Exception {
        assertEquals(15, Calculator.evaluateExpression("5*3"));
    }test การคูณ


    void errorTest() {
        assertAll(
                () -> {
                    ArithmeticException exception = assertThrows(ArithmeticException.class, () -> {
                        Calculator.evaluateExpression("1/0");
                    });
                    assertEquals("Division by zero", exception.getMessage());
                },

                () -> {
                    IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () -> {
                        Calculator.evaluateExpression("a");
                    });
                    assertEquals("Invalid input: a", exception.getMessage());
                }
    }

    void fileInputAccess() {
            File file1 = new File("C:/Users/Admin/IdeaProjects/lab09-Pithiwit/src/input");
            assertTrue(file1.exists() && file1.canRead());
        } หาไฟล์ input

    void fileOutputAccess() {
            File file2 = new File("C:/Users/Admin/IdeaProjects/lab09-Pithiwit/src/output");
            assertTrue(file2.exists() && file2.canRead());
        }หาไฟล์ output